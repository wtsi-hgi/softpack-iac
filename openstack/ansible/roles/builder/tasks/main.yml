- name: Create directories
  become: true
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ username }}"
    mode: "{{ item.mode }}"
  loop:
    - path: "{{ builder_path }}"
      mode: u=rwx,o=rx,g=rx
    - path: "{{ prefect_home }}"
      mode: u=rwx,o=rwx,g=rwx
    - path: "{{ builder_config | dirname }}"
      mode: u=rwx,g=-,o=-

- name: Clone git repo
  ansible.builtin.git:
    repo: "{{ builder_repo }}"
    version: "{{ builder_version }}"
    dest: "{{ builder_path }}"
    accept_hostkey: true

- name: Install python packages
  ansible.builtin.pip:
    name: "{{ item }}"
    virtualenv: "{{ builder_venv }}"
    virtualenv_command: python -m venv
  loop:
    - pip == 23.0.1
    - poetry == 1.4.0

- name: Write config file
  vars:
    config:
      spack: "{{ spack }}"
      artifacts: "{{ artifacts }}"
  ansible.builtin.copy:
    content: "{{ config | to_nice_yaml(indent=2) }}"
    dest: "{{ builder_config }}"
    mode: u=rw,g=-,o=-

- name: Install dependencies
  ansible.builtin.command: "{{ builder_venv }}/bin/poetry install -E dev"
  args:
    chdir: "{{ builder_path }}"
    creates: "{{ builder_venv }}/bin/softpack-builder"

- name: Setup prefect server
  become: true
  vars:
    systemd_lib: /lib/systemd/system
    systemd_etc: /etc/systemd/system/multi-user.target.wants

  block:
    - name: Setup systemd services
      ansible.builtin.template:
        src: "{{ item }}"
        dest: "{{ systemd_lib }}"
        mode: u=rw,g=r,o=r
      with_fileglob:
        - files/*.service

    - name: Enable services
      ansible.builtin.file:
        src: "{{ systemd_lib }}/{{ item | basename }}"
        dest: "{{ systemd_etc }}/{{ item | basename }}"
        state: link
      with_fileglob:
        - files/*.service

    - name: Setup prefect server site
      ansible.builtin.copy:
        src: files/prefect-server
        dest: /etc/nginx/sites-available
        mode: u=rw,g=r,o=r

    - name: Enable prefect server site
      ansible.builtin.file:
        src: /etc/nginx/sites-available/prefect-server
        dest: /etc/nginx/sites-enabled/prefect-server
        state: link
      register: prefect_server_site

    - name: Remove default site
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Restart nginx service
      ansible.builtin.systemd:
        name: nginx
        state: restarted
      when: prefect_server_site.changed

- name: Configure prefect service
  vars:
    domain: "{{ [dns.zone | default(''), dns.domain] | select() | join('.') }}"
    hostname: "{{ ansible_hostname }}.{{ domain }}"
  ansible.builtin.shell: |
    source {{ builder_venv }}/bin/activate
    prefect config set PREFECT_API_URL=http://{{ hostname }}/api
    prefect config set PREFECT_HOME={{ prefect_home }}
  args:
    executable: /bin/bash
    creates: "{{ prefect_profile_path }}"

- name: Copy prefect profile
  become: true
  ansible.builtin.copy:
    src: "{{ prefect_profile_path }}"
    remote_src: true
    dest: "{{ config.user }}/{{ prefect_profile | dirname }}/"
    mode: u=rw,o=r,g=r

- name: Start services
  become: true
  ansible.builtin.systemd:
    name: "{{ item | basename }}"
    daemon_reload: true
    enabled: true
    state: started
  with_fileglob:
    - files/*.service
